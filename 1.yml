---
- hosts: '{{ host }}'
  connection: local
  gather_facts: False
  
  roles:
    - role: PaloAltoNetworks.paloaltonetworks
    
  tasks:
    - name: Create a new unattached vgw
      ec2_vpc_vgw:
        state: present
        region: '{{ region }}'
        aws_secret_key: '{{ aws_secret_key }}'
        aws_access_key: '{{ aws_access_key }}'
        name: "{{ host }}-VGW"
        type: ipsec.1
      register: vgw
      
    - name: Create a new cgw  
      ec2_customer_gateway:
        bgp_asn: 12345
        ip_address: 1.2.3.4
        aws_secret_key: '{{ aws_secret_key }}'
        aws_access_key: '{{ aws_access_key }}'        
        name: "{{ host }}-CGW"
        region: '{{ region }}'
      register: cgw

    - name: create a VPN connection
      ec2_vpc_vpn:
        region: '{{ region }}'
        aws_secret_key: '{{ aws_secret_key }}'
        aws_access_key: '{{ aws_access_key }}'      
        state: present
        customer_gateway_id: '{{ cgw.gateway.customer_gateways[0].customer_gateway_id }}'
        vpn_gateway_id: '{{ vgw.vgw.id }}'
        tunnel_options:
          - TunnelInsideCidr: '{{ TunnelInsideCidr0 }}'
          - TunnelInsideCidr: '{{ TunnelInsideCidr1 }}'
      register: customer_gateway_configuration

    - name: Parse XML for IPSec tunnel IPs.
      xml:
        xmlstring: '{{ customer_gateway_configuration.customer_gateway_configuration }}'
        content: "text"
        xpath: "/vpn_connection/ipsec_tunnel/customer_gateway/tunnel_inside_address/ip_address"
      register: tunnel_inside_address

    - name: Parse XML for AWS IPs
      xml:
        xmlstring: '{{ customer_gateway_configuration.customer_gateway_configuration }}'
        content: "text"
        xpath: "/vpn_connection/ipsec_tunnel/vpn_gateway/tunnel_outside_address/ip_address"
      register: tunnel_outside_address
        
    - name: Parse XML for tunnel PSKs
      xml:
        xmlstring: '{{ customer_gateway_configuration.customer_gateway_configuration }}'
        content: "text"
        xpath: "/vpn_connection/ipsec_tunnel/ike/pre_shared_key"
      register: pre_shared_key  
      
    - name: print value_to_reuse
      debug:
         var: hostvars['{{ transit_fw }}']['panorama'] 
      with_items: "{{ hostvars }}"
      
    - name: Add IKE gateway config to the firewall
      panos_ike_gateway:
        username: '{{ username }}'
        password: '{{ password }}'
        ip_address: hostvars['{{ transit_fw }}']['panorama'] 
        template: hostvars['{{ transit_fw }}']['template'] 
        state: 'present'
        name: 'IKE-GATE-{{ host }}-AZ1'
        version: 'ikev2'
        interface: 'ethernet1/1'
        peer_ip_value: '{{ tunnel_outside_address.matches[0].ip_address }}'
        pre_shared_key: '{{ pre_shared_key.matches[0].pre_shared_key }}'
        ikev2_crypto_profile: 'ICP-DH_G2-AUTH_SHA256-EN_AES256'
        commit: False   
      with_items: "{{ hostvars['{{ transit_fw }}'] }}"        
        
    - name: Creat VPC Security Zone
      panos_zone:
        username: '{{ username }}'
        password: '{{ password }}'
        ip_address: '{{ panorama}}'
        template: '{{ template }}'   
        zone: '{{ host }}'
        mode: 'layer3'
      with_items: "{{ hostvars['{{ transit_fw }}'] }}"   
    
    - name: Create tunnel IP interfaces
      panos_tunnel:
        username: '{{ username }}'
        password: '{{ password }}'
        ip_address: '{{ panorama}}'
        template: '{{ template }}'   
        if_name: "tunnel.1"
        ip: ['{{ tunnel_inside_address.matches[0].ip_address }}']
        vr_name: '{{ item.routing_instance }}'
        zone_name: "{{ host }}"
      with_items: "{{ hostvars['{{ transit_fw }}'] }}"   
      
    - name: Create IPSec Tunnel
      panos_ipsec_tunnel:
        username: '{{ username }}'
        password: '{{ password }}'
        ip_address: '{{ panorama}}'
        template: '{{ template }}'
        name: 'IPSSEC-TUN-{{ host }}'
        tunnel_interface: 'tunnel.1'
        ak_ike_gateway: 'IKE-GATE-{{ host }}-AZ1'
        ak_ipsec_crypto_profile: 'IPCP-EN-AES256_AU-AES256_DH_G2'
        state: 'present'
        commit: False   
      with_items: "{{ hostvars['{{ transit_fw }}'] }}"   
